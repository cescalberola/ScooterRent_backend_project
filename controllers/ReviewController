const { Review, Customer, Sequelize } = require('../models/index.js');
const { Op } = Sequelize;

const ReviewController = {
    async create(req, res) {
        try {
            const review = await Review.create({...req.body, CustomerId: req.customer.id});
            res.status(201).send({ message: 'Review created successfully', review });
        } catch (err) {
            console.error(err);
            res.status(500).send({ msg: "There has been an error", err });
        }
    },

    async getAll(req, res) {
        try {
            const reviews = await Review.findAll({
                include: [{ model: Customer, attributes: ['email', 'Firstname'] }]
            });
            res.send(reviews);
        } catch (err) {
            console.error(err);
            res.status(500).send({ message: 'There was a problem loading publications' });
        }
    },

    async getById(req, res) {
        try {
            const post = await Review.findByPk(req.params.id, {
                include: [Customer]
            });
            res.send(post);
        } catch (err) {
            console.error(err);
            res.status(500).send({ message: 'There was a problem loading the review' });
        }
    },

    async getOneByName(req, res) {
        try {
            const post = await Review.findOne({
                where: {
                    title: {
                        [Op.like]: `%${req.params.title}%`
                    }
                },
                include: [Customer]
            });
            res.send(post);
        } catch (err) {
            console.error(err);
            res.status(500).send({ message: 'There was a problem loading the review' });
        }
    },

    async update(req, res) {
        try {
            await Review.update(req.body, {
                where: {
                    id: req.params.id,
                },
            });
            res.send("Review successfully updated");
        } catch (err) {
            console.error(err);
            res.status(500).send({ message: 'There was an error updating the review' });
        }
    },

    async delete(req, res) {
        try {
            await Review.destroy({
                where: {
                    id: req.params.id
                }
            });
            res.send('The review has been successfully removed');
        } catch (err) {
            console.error(err);
            res.status(500).send({ message: 'There was an error deleting the review' });
        }
    },
}

module.exports = ReviewController
