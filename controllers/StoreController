const { Store, Scooter, Sequelize} = require("../models/index.js");
const { Op } = Sequelize;

const StoreController = {
  async create(req, res) {
    console.log("object");
    try {
      const store = await Store.create(req.body);
      res.status(201).send({ message: 'Store created successfully', store });
    } catch (err) {
      console.error(err);
      res.status(500).send(err);
    }
  },

  async getOneByName(req, res) {
    try {
        const store = await Store.findOne({
            where: {
              StoreName: {
                    [Op.like]: `%${req.params.StoreName}%`
                }
            },
        });
        res.send(store);
    } catch (err) {
        console.error(err);
        res.status(500).send({ message: 'There was a problem loading the Store' });
    }
},

async getById(req, res) {
  try {
    const store = await Store.findByPk(req.params.id);
    res.send(store);
  } catch (err) {
    console.error(err);
    res.status(500).send(err);
  }
},

  async getAll(req, res) {
    try {
      const stores = await Store.findAll({
				include: [{
          model: Scooter,
          attributes: ["id","Brand", "Model"],	
					},
				],
			});
      res.send(stores);
    } catch (err) {
      console.log(err);
      res.status(500).send({
        message: "There was a problem to find",
      });
    }
  },
  async delete(req, res) {
    try {
      await Store.destroy({
        where: {
          id: req.params.id,
        },
      });
      res.send("The store has been successfully deleted");
    } catch (err) {
      console.error(err);
      res.status(500).send(err);
    }
  },
  async update(req, res) {
    try {
      await Store.update(req.body, {
        where: {
          id: req.params.id,
        },
      });
      res.send("Store successfully updated");
    } catch (err) {
      console.error(err);
      res.status(500).send(err);
    }
  },
};

module.exports = StoreController
